{
  "name": "DynamicMusai (PreMusai's)",
  "nodes": [
    {
      "parameters": {
        "path": "premusai",
        "authentication": "basicAuth",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        112,
        -96
      ],
      "id": "eb2f7030-5449-402d-88b3-5b9ed434e6f0",
      "name": "Webhook",
      "webhookId": "590121b4-cbf6-467d-b1fa-489a37811fd9",
      "credentials": {
        "httpBasicAuth": {
          "id": "5sBfSoSsO824kWBH",
          "name": "Site Simple Auth"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.agentPrompt }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $json.agentSystem }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        624,
        0
      ],
      "id": "4dcdbe77-e7f5-4844-8a49-c0303d087c48",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-20b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        528,
        272
      ],
      "id": "5a6a79ba-f48b-431d-9cb4-d55078e99711",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "RxyKtpL6w66Rr6sy",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=={{ $json[\"sessionId\"] }}",
        "contextWindowLength": 1
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        832,
        256
      ],
      "id": "10131a65-726d-44af-a09f-8858a61abd1a",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        976,
        -128
      ],
      "id": "34f90622-5967-4168-932d-6e87520521ae",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "model": "MeaTLoTioN/William_Riker:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        704,
        432
      ],
      "id": "3f78a957-ab42-4f1f-9443-6aaee6181ff4",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "5jMmaKw46MblNzJ1",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        128,
        80
      ],
      "id": "529866f3-5e44-485b-85da-0e8cebb51a8c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d4188cd4-ef5a-4834-977b-8dda6fc4b84f",
              "name": "sessionId",
              "value": "={{$json.body?.sessionId ?? \"testId\"}}",
              "type": "string"
            },
            {
              "id": "366fcf16-8f37-4a8f-ba12-f05b3b0d67ee",
              "name": "musai",
              "value": "={{ $json.query?.musai ?? \"university\" }}",
              "type": "string"
            },
            {
              "id": "fd7ac6e4-4a2c-49b7-9864-559955afa989",
              "name": "musai_options",
              "value": "chat|search|code|university|narrative|task|career|therapy|medical|eye",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        320,
        -160
      ],
      "id": "2261a9d7-f345-47ae-8c26-a1d229f09309",
      "name": "CheckPoint"
    },
    {
      "parameters": {
        "jsCode": "/**\n * Outputs TWO params for the AI Agent:\n *   - agentSystem (string): strict Musai system prompt (JSON-only)\n *   - agentPrompt (string): user payload (JSON string)\n *\n * Wire in AI Agent node:\n *   System Prompt => ={{$json.agentSystem}}\n *   User Message  => ={{$json.agentPrompt}}\n */\n\nconst headers = $json.headers || {};\nconst query   = $json.query   || {};\nconst body    = $json.body    || {};\n\nconst ALLOWED_TYPES = [\n  \"chat\",\"search\",\"code\",\"university\",\"narrative\",\"task\",\"career\",\"therapy\",\"medical\",\"eye\"\n];\n\n// resolve type; fallback to chat\nlet musaiType = (query.musai || body.musai || \"\").toString().trim().toLowerCase();\nif (!ALLOWED_TYPES.includes(musaiType)) musaiType = \"chat\";\n\n// optional session\nconst session = {\n  clientId: headers[\"x-musai-client-id\"] || \"public_client\",\n  sessionId: headers[\"x-musai-session-id\"] || query.sessionId || body.sessionId || \"public_session\",\n};\n\n// schema (for guidance—model must not echo it)\nconst SCHEMA = {\n  description: \"Return ONLY valid JSON for PreMusaiContent.\",\n  type: \"object\",\n  required: [\"type\",\"title\",\"subtitle\",\"placeholder\",\"examples\",\"quickActions\"],\n  properties: {\n    type: { type: \"string\", enum: ALLOWED_TYPES },\n    title: { type: \"string\" },\n    subtitle: { type: \"string\" },\n    placeholder: { type: \"string\" },\n    examples: {\n      type: \"array\", minItems: 3,\n      items: {\n        type: \"object\",\n        required: [\"id\",\"text\"],\n        properties: {\n          id: { type: \"string\" },\n          text: { type: \"string\" },\n          category: { type: \"string\" },\n          popularity: { type: \"number\" }\n        }\n      }\n    },\n    quickActions: {\n      type: \"array\", minItems: 2,\n      items: {\n        type: \"object\",\n        required: [\"id\",\"icon\",\"title\",\"description\",\"actionType\"],\n        properties: {\n          id: { type: \"string\" },\n          icon: { type: \"string\" },\n          title: { type: \"string\" },\n          description: { type: \"string\" },\n          actionType: { type: \"string\", enum: [\"submit\",\"navigate\",\"function\"] },\n          actionData: {}\n        }\n      }\n    }\n  }\n};\n\n// defaults (updated per your intent)\nconst DEFAULTS = {\n  chat:       { title: \"Chat\",        subtitle: \"Conversational assistant for ideas, answers, and iteration.\",               placeholder: \"What’s on your mind?\" },\n  search:     { title: \"Research\",    subtitle: \"Research that outputs a newspaper-style brief with ranked sources.\",        placeholder: \"Topic, question, or headline…\" },\n  code:       { title: \"Code\",        subtitle: \"Build, refactor, review, and document—fast.\",                               placeholder: \"Describe what you want to build…\" },\n  university: { title: \"University\",  subtitle: \"Design higher-level courses: draft → syllabus → lectures/quizzes/exams.\",   placeholder: \"Course idea (e.g., “Probability & Markov Chains”)\"},\n  narrative:  { title: \"Narrative\",   subtitle: \"Create high-level stories, series bibles, and evolving worlds.\",            placeholder: \"Novel/series concept, logline, or world seed…\" },\n  task:       { title: \"Tasks\",       subtitle: \"Workflow orchestration: capture goals, automate steps, sprint helpers.\",    placeholder: \"Add a task or outcome…\" },\n  career:     { title: \"Career\",      subtitle: \"Role research, materials, interview prep, and next steps.\",                 placeholder: \"Role, target company, or challenge…\" },\n  therapy:    { title: \"Therapy\",     subtitle: \"Reflective wellness: guided dialogues, CBT-style exercises, journaling.\",   placeholder: \"What’s weighing on you today?\" },\n  medical:    { title: \"Medical\",     subtitle: \"Educational summaries and question lists for clinicians (not medical advice).\", placeholder: \"Topic or text to summarize (no PII)…\" },\n  eye:        { title: \"Inspector\",   subtitle: \"Analyze, validate, and extract patterns; optional vision/indexing.\",        placeholder: \"Paste text, logs, or data…\" }\n};\n\n// examples (leveled per module)\nconst SEED_EXAMPLES = {\n  chat: [\n    { id: \"chat-1\", text: \"Plan a weekend creative sprint\", category: \"planning\", popularity: 1 },\n    { id: \"chat-2\", text: \"Explain reinforcement learning in plain English\", category: \"learning\", popularity: 1 },\n    { id: \"chat-3\", text: \"Pressure-test this 5-step plan\", category: \"review\", popularity: 1 }\n  ],\n  search: [\n    { id: \"search-1\", text: \"Create today’s brief on open-source LLM licensing\", category: \"ai-policy\", popularity: 1 },\n    { id: \"search-2\", text: \"Compare coverage of ‘edge AI chips’ across 3 outlets\", category: \"tech-news\", popularity: 1 },\n    { id: \"search-3\", text: \"Track weekly updates on mental health access in Canada\", category: \"public-health\", popularity: 1 }\n  ],\n  code: [\n    { id: \"code-1\", text: \"Build a feature flag API (FastAPI + Redis)\", category: \"backend\", popularity: 1 },\n    { id: \"code-2\", text: \"Implement OAuth login in Next.js\", category: \"frontend\", popularity: 1 },\n    { id: \"code-3\", text: \"Write unit tests for a queue worker\", category: \"testing\", popularity: 1 }\n  ],\n  university: [\n    { id: \"uni-1\", text: \"Course: Probability & Markov Chains\", category: \"mathematics\", popularity: 1 },\n    { id: \"uni-2\", text: \"Course: Human–Computer Interaction Foundations\", category: \"hci\", popularity: 1 },\n    { id: \"uni-3\", text: \"Course: Data Ethics & Responsible AI\", category: \"ethics\", popularity: 1 }\n  ],\n  narrative: [\n    { id: \"nar-1\", text: \"Series Bible: A city run by sentient transit lines\", category: \"series\", popularity: 1 },\n    { id: \"nar-2\", text: \"Novel Concept: Memory merchants trading borrowed lives\", category: \"novel\", popularity: 1 },\n    { id: \"nar-3\", text: \"Worldbuilding: The archipelago where music predicts weather\", category: \"world\", popularity: 1 }\n  ],\n  task: [\n    { id: \"task-1\", text: \"Template: Weekly outcome review\", category: \"templates\", popularity: 1 },\n    { id: \"task-2\", text: \"Decompose: ‘Launch landing page’ into tasks\", category: \"delivery\", popularity: 1 },\n    { id: \"task-3\", text: \"Acceptance criteria: ‘User login’ story\", category: \"qa\", popularity: 1 }\n  ],\n  career: [\n    { id: \"career-1\", text: \"Rewrite resume bullets for impact (STAR)\", category: \"resume\", popularity: 1 },\n    { id: \"career-2\", text: \"System design interview warm-ups\", category: \"interview\", popularity: 1 },\n    { id: \"career-3\", text: \"Outreach note to a hiring manager\", category: \"networking\", popularity: 1 }\n  ],\n  therapy: [\n    { id: \"th-1\", text: \"5-line reflection on today’s emotions\", category: \"journaling\", popularity: 1 },\n    { id: \"th-2\", text: \"Identify & reframe a thinking trap\", category: \"cbt\", popularity: 1 },\n    { id: \"th-3\", text: \"Grounding exercise for anxiety\", category: \"skills\", popularity: 1 }\n  ],\n  medical: [\n    { id: \"med-1\", text: \"Explain CBC & CMP panels in plain language\", category: \"education\", popularity: 1 },\n    { id: \"med-2\", text: \"Summarize this anonymized clinical note\", category: \"summarization\", popularity: 1 },\n    { id: \"med-3\", text: \"Question list for my upcoming appointment\", category: \"prep\", popularity: 1 }\n  ],\n  eye: [\n    { id: \"eye-1\", text: \"Validate and repair this JSON blob\", category: \"devtools\", popularity: 1 },\n    { id: \"eye-2\", text: \"Diagnose a CSP error log\", category: \"security\", popularity: 1 },\n    { id: \"eye-3\", text: \"Extract entities and keywords from text\", category: \"nlp\", popularity: 1 }\n  ]\n};\n\n// quick actions (aligned to outputs)\nconst SEED_ACTIONS = {\n  chat: [\n    { id: \"chat-new\",   icon: \"MessageSquare\", title: \"New Chat\",       description: \"Start fresh\",             actionType: \"function\" },\n    { id: \"chat-style\", icon: \"Sparkles\",      title: \"Tune Style\",     description: \"Adjust tone/persona\",     actionType: \"navigate\", actionData: { target: \"style\" } }\n  ],\n  search: [\n    { id: \"search-brief\",  icon: \"Newspaper\",  title: \"Daily Brief\",    description: \"Newspaper-style summary\", actionType: \"submit\" },\n    { id: \"search-compare\",icon: \"ListChecks\", title: \"Compare Sources\", description: \"Side-by-side views\",      actionType: \"navigate\", actionData: { target: \"compare\" } }\n  ],\n  code: [\n    { id: \"code-generate\", icon: \"Boxes\",          title: \"Generate\",  description: \"Create snippet\",           actionType: \"submit\" },\n    { id: \"code-review\",   icon: \"GitPullRequest\", title: \"Review\",    description: \"Static review & hints\",    actionType: \"submit\" }\n  ],\n  university: [\n    { id: \"uni-draft\",    icon: \"Plus\",     title: \"Draft Course\",       description: \"Generate outline\",     actionType: \"function\" },\n    { id: \"uni-syllabus\", icon: \"BookOpen\", title: \"Generate Syllabus\",  description: \"Objectives & modules\", actionType: \"submit\" }\n  ],\n  narrative: [\n    { id: \"nar-logline\", icon: \"Quote\",   title: \"Create Logline\", description: \"Hook & premise\",       actionType: \"submit\" },\n    { id: \"nar-evolve\",  icon: \"Shuffle\", title: \"Evolve Plot\",    description: \"Branch choices\",       actionType: \"function\" }\n  ],\n  task: [\n    { id: \"task-add\",    icon: \"Plus\",  title: \"Capture Task\",  description: \"Quick add\",              actionType: \"submit\" },\n    { id: \"task-sprint\", icon: \"Goal\",  title: \"Sprint Helper\", description: \"Plan or review\",         actionType: \"navigate\", actionData: { target: \"sprint\" } }\n  ],\n  career: [\n    { id: \"car-resume\", icon: \"FilePenLine\",   title: \"Resume Boost\", description: \"Impact bullets\",   actionType: \"submit\" },\n    { id: \"car-prep\",   icon: \"ClipboardCheck\",title: \"Interview Prep\",description: \"Practice sets\",   actionType: \"navigate\", actionData: { target: \"prep\" } }\n  ],\n  therapy: [\n    { id: \"th-start\",   icon: \"Heart\",        title: \"Start Session\", description: \"Gentle check-in\",  actionType: \"submit\" },\n    { id: \"th-journal\", icon: \"NotebookPen\",  title: \"5-Line Journal\", description: \"Fast reflection\", actionType: \"submit\" }\n  ],\n  medical: [\n    { id: \"med-summarize\", icon: \"FileText\",   title: \"Summarize\",       description: \"Explain clearly\", actionType: \"submit\" },\n    { id: \"med-questions\", icon: \"HelpCircle\", title: \"Doctor Questions\", description: \"Prep checklist\",  actionType: \"function\" }\n  ],\n  eye: [\n    { id: \"eye-analyze\", icon: \"ScanSearch\",  title: \"Analyze\",     description: \"Validate & extract\", actionType: \"submit\" },\n    { id: \"eye-train\",   icon: \"BrainCircuit\",title: \"Index/Train\", description: \"Optional indexing\",  actionType: \"function\" }\n  ]\n};\n\n// ===== STRICT SYSTEM PROMPT (JSON-ONLY) =====\nconst agentSystem = `\nYou are Musai, a helpful assistant that generates dynamic HOMEPAGE content for a Musai module.\n\nOUTPUT REQUIREMENTS (MANDATORY):\n- Output MUST be a SINGLE JSON OBJECT that conforms to \"PreMusaiContent\".\n- Do NOT include explanations, headings, examples, notes, bullets, or commentary.\n- Do NOT include Markdown or code fences. No \\`\\`\\`, no \"Here is\", no pre/post text.\n- The FIRST character of the output MUST be '{' and the LAST character MUST be '}'.\n\nCONTRACT:\n- \"type\" MUST equal the requested Musai type (coerce to an allowed value; default \"chat\").\n- Provide concise, public-facing \"title\", \"subtitle\", \"placeholder\".\n- Provide 3–6 \"examples\" and 2–4 \"quickActions\" tailored to the module and primer.\n- Prefer lucide icon names for \"icon\" (e.g., \"Plus\", \"Search\", \"MessageSquare\").\n- Allowed types: ${ALLOWED_TYPES.join(\", \")}.\n\nDO NOT:\n- Do not wrap JSON in code blocks.\n- Do not prefix with text like \"Here is an example\".\n- Do not add keys outside the schema.\n\nReturn exactly one JSON object, nothing else.\n`.trim();\n\n// primer (captures your higher-level intent)\nconst primer = {\n  chat:       \"Conversational assistant. Dynamic content: starters/templates/popular topics. Extras: style analysis, persona tuning.\",\n  search:     \"AI-enhanced research that outputs a newspaper-style brief with ranked sources. Dynamic content: daily brief & compare coverage.\",\n  code:       \"Coding copilot to build things. Dynamic content: code templates and quick playground.\",\n  university: \"Higher-level course builder (not one-off lessons): draft → syllabus → lectures/quizzes/exams. Dynamic content: course prompts and syllabus actions.\",\n  narrative:  \"High-level storytelling: novels/series/worlds that evolve; runtime choices alter arcs. Dynamic content: loglines, series bibles, worldbuilding starters.\",\n  task:       \"Workflow and productivity orchestration (Agile). Dynamic content: templates and quick automations.\",\n  career:     \"Job intelligence & materials. Dynamic content: career tips, trends, quick actions.\",\n  therapy:    \"Reflective wellness chat. Dynamic content: session start, goals, journal quick action.\",\n  medical:    \"Health copilot (educational). Dynamic content: plan/journal starters.\",\n  eye:        \"Vision + indexing. Dynamic content: analyze/generate quick actions.\"\n};\n\n// user payload\nconst agentPromptObj = {\n  instruction: \"Generate public-facing dynamic HOMEPAGE content for this Musai module. Output must be ONLY the JSON object.\",\n  musaiType,\n  session,\n  primer,\n  seedDefaults: DEFAULTS[musaiType],\n  seedExamples: SEED_EXAMPLES[musaiType],\n  seedActions:  SEED_ACTIONS[musaiType],\n  schema: SCHEMA\n};\n\nconst agentPrompt = JSON.stringify(agentPromptObj);\n\nreturn {\n  json: {\n    musaiType,\n    agentSystem,\n    agentPrompt,\n    session,\n    schema: SCHEMA\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        0
      ],
      "id": "b78248f1-d3a7-4ce7-8c11-b221c08c7a1d",
      "name": "PrepForLLM"
    },
    {
      "parameters": {
        "jsCode": "\nconst ALLOWED = [\"chat\",\"search\",\"code\",\"university\",\"narrative\",\"task\",\"career\",\"therapy\",\"medical\",\"eye\"];\n\nfunction coerceType(t) {\n  t = (t ?? \"\").toString().trim().toLowerCase();\n  return ALLOWED.includes(t) ? t : \"chat\";\n}\n\nconst musaiType = coerceType($json.musai);\n\n// ----- selection inputs -----\nconst seedInput   = ($json.seed ?? \"\").toString();\nconst sessionId   = ($json.sessionId ?? \"\").toString();\nconst forcedIdx   = Number.isFinite(+$json.idx) ? +$json.idx : null;\nconst useRandom   = String($json.random ?? \"0\") === \"1\";\nconst useRotate   = String($json.rotate ?? \"0\") === \"1\";\n\n// If no seed and no sessionId, add a minute-salt so it varies over time:\nconst minuteSalt = new Date().toISOString().slice(0,16); // e.g., \"2025-08-23T14:07\"\nconst salt = seedInput || sessionId || minuteSalt;\n\n// deterministic hash\nfunction djb2(str) {\n  let h = 5381;\n  for (let i = 0; i < str.length; i++) h = ((h << 5) + h) + str.charCodeAt(i);\n  return Math.abs(h >>> 0);\n}\n\n// workflow-rotation counter (persists across executions)\nconst global = $getWorkflowStaticData('global'); // n8n helper\nglobal.__musaiRotCounters ||= {};\nglobal.__musaiRotCounters[musaiType] ||= 0;\n\n/**\n * LIB: For each type we define multiple \"packs\".\n * Each pack = { title, subtitle, placeholder, examples[], quickActions[] }\n * Keep packs concise & public-friendly.\n */\nconst LIB = {\n  chat: [\n    {\n      title: \"Chat\",\n      subtitle: \"Conversational assistant for ideas, answers, and iteration.\",\n      placeholder: \"What’s on your mind?\",\n      examples: [\n        { id: \"chat-plan\", text: \"Plan a weekend creative sprint\", category: \"planning\", popularity: 1 },\n        { id: \"chat-explain\", text: \"Explain reinforcement learning in plain English\", category: \"learning\", popularity: 1 },\n        { id: \"chat-review\", text: \"Pressure-test this 5-step plan\", category: \"review\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"chat-new\", icon: \"MessageSquare\", title: \"New Chat\", description: \"Start fresh\", actionType: \"function\" },\n        { id: \"chat-style\", icon: \"Sparkles\", title: \"Tune Style\", description: \"Adjust tone/persona\", actionType: \"navigate\", actionData: { target: \"style\" } }\n      ]\n    },\n    {\n      title: \"Chat\",\n      subtitle: \"Brainstorm, summarize, and clarify anything quickly.\",\n      placeholder: \"Ask me anything…\",\n      examples: [\n        { id: \"chat-ideas\", text: \"Brainstorm 10 app ideas with pros/cons\", category: \"ideation\", popularity: 1 },\n        { id: \"chat-brief\", text: \"Summarize this article in 5 bullets\", category: \"summary\", popularity: 1 },\n        { id: \"chat-coach\", text: \"Rewrite this paragraph for clarity\", category: \"editing\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"chat-notes\", icon: \"Notebook\", title: \"Make Notes\", description: \"Turn thoughts to bullets\", actionType: \"submit\" },\n        { id: \"chat-outline\", icon: \"ListOrdered\", title: \"Create Outline\", description: \"Structure a doc\", actionType: \"submit\" }\n      ]\n    }\n  ],\n\n  search: [\n    {\n      title: \"Research\",\n      subtitle: \"Generate a newspaper-style brief with ranked sources.\",\n      placeholder: \"Topic, question, or headline…\",\n      examples: [\n        { id: \"sr-brief-llm\", text: \"Create today’s brief on open-source LLM licensing\", category: \"ai-policy\", popularity: 1 },\n        { id: \"sr-compare\", text: \"Compare coverage of ‘edge AI chips’ across 3 outlets\", category: \"tech-news\", popularity: 1 },\n        { id: \"sr-track\", text: \"Track weekly updates on mental health access in Canada\", category: \"public-health\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"sr-daily\", icon: \"Newspaper\", title: \"Daily Brief\", description: \"Fresh summary + sources\", actionType: \"submit\" },\n        { id: \"sr-compare\", icon: \"ListChecks\", title: \"Compare Sources\", description: \"Side-by-side view\", actionType: \"navigate\", actionData: { target: \"compare\" } }\n      ]\n    },\n    {\n      title: \"Research\",\n      subtitle: \"Ask, aggregate, and read concise briefs with citations.\",\n      placeholder: \"What should we investigate?\",\n      examples: [\n        { id: \"sr-policy\", text: \"What changed in AI regulation this month?\", category: \"policy\", popularity: 1 },\n        { id: \"sr-hw\", text: \"GPUs vs NPUs for local AI workloads\", category: \"hardware\", popularity: 1 },\n        { id: \"sr-health\", text: \"Evidence-based CBT techniques overview\", category: \"psychology\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"sr-run\", icon: \"Search\", title: \"Run Search\", description: \"Query top sources\", actionType: \"submit\" },\n        { id: \"sr-trend\", icon: \"BarChart3\", title: \"Trending\", description: \"Popular topics\", actionType: \"navigate\", actionData: { target: \"trending\" } }\n      ]\n    }\n  ],\n\n  code: [\n    {\n      title: \"Code\",\n      subtitle: \"Build, refactor, review, and document—fast.\",\n      placeholder: \"Describe what you want to build…\",\n      examples: [\n        { id: \"cd-ff\", text: \"Build a feature flag API (FastAPI + Redis)\", category: \"backend\", popularity: 1 },\n        { id: \"cd-oauth\", text: \"Implement OAuth login in Next.js\", category: \"frontend\", popularity: 1 },\n        { id: \"cd-tests\", text: \"Write unit tests for a queue worker\", category: \"testing\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"cd-gen\", icon: \"Boxes\", title: \"Generate\", description: \"Create snippet\", actionType: \"submit\" },\n        { id: \"cd-review\", icon: \"GitPullRequest\", title: \"Review\", description: \"Static review & hints\", actionType: \"submit\" }\n      ]\n    },\n    {\n      title: \"Code\",\n      subtitle: \"Snippets, fixes, docs, and quick playgrounds.\",\n      placeholder: \"What’s the bug or feature?\",\n      examples: [\n        { id: \"cd-cors\", text: \"Fix a CORS error in my frontend\", category: \"frontend\", popularity: 1 },\n        { id: \"cd-doc\", text: \"Generate README for this service\", category: \"docs\", popularity: 1 },\n        { id: \"cd-refactor\", text: \"Refactor this function for clarity\", category: \"refactor\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"cd-run\", icon: \"Play\", title: \"Playground\", description: \"Try code quickly\", actionType: \"navigate\", actionData: { target: \"play\" } },\n        { id: \"cd-types\", icon: \"Code2\", title: \"Add Types\", description: \"Type hints/defs\", actionType: \"submit\" }\n      ]\n    }\n  ],\n\n  university: [\n    {\n      title: \"University\",\n      subtitle: \"Design higher-level courses: draft → syllabus → lectures/quizzes/exams.\",\n      placeholder: \"Course idea (e.g., “Probability & Markov Chains”)\",\n      examples: [\n        { id: \"uni-prob-mc\", text: \"Course: Probability & Markov Chains\", category: \"mathematics\", popularity: 1 },\n        { id: \"uni-hci\", text: \"Course: Human–Computer Interaction Foundations\", category: \"hci\", popularity: 1 },\n        { id: \"uni-ethics\", text: \"Course: Data Ethics & Responsible AI\", category: \"ethics\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"uni-draft\", icon: \"Plus\", title: \"Draft Course\", description: \"Generate outline\", actionType: \"function\" },\n        { id: \"uni-syllabus\", icon: \"BookOpen\", title: \"Generate Syllabus\", description: \"Objectives & modules\", actionType: \"submit\" }\n      ]\n    },\n    {\n      title: \"University\",\n      subtitle: \"From course prompt to full path: lectures, quizzes, and exams.\",\n      placeholder: \"What will learners master?\",\n      examples: [\n        { id: \"uni-ml\", text: \"Course: Practical Machine Learning\", category: \"ai\", popularity: 1 },\n        { id: \"uni-prod\", text: \"Course: Product Strategy for Builders\", category: \"business\", popularity: 1 },\n        { id: \"uni-audio\", text: \"Course: Music Theory for Makers\", category: \"music\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"uni-lectures\", icon: \"GraduationCap\", title: \"Generate Lectures\", description: \"Create lecture set\", actionType: \"submit\" },\n        { id: \"uni-assess\", icon: \"FileCheck\", title: \"Build Assessments\", description: \"Quizzes & exams\", actionType: \"submit\" }\n      ]\n    }\n  ],\n\n  narrative: [\n    {\n      title: \"Narrative\",\n      subtitle: \"Create high-level stories, series bibles, and evolving worlds.\",\n      placeholder: \"Novel/series concept, logline, or world seed…\",\n      examples: [\n        { id: \"nar-series\", text: \"Series Bible: A city run by sentient transit lines\", category: \"series\", popularity: 1 },\n        { id: \"nar-novel\", text: \"Novel Concept: Memory merchants trading borrowed lives\", category: \"novel\", popularity: 1 },\n        { id: \"nar-world\", text: \"Worldbuilding: Archipelago where music predicts weather\", category: \"world\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"nar-logline\", icon: \"Quote\", title: \"Create Logline\", description: \"Hook & premise\", actionType: \"submit\" },\n        { id: \"nar-evolve\", icon: \"Shuffle\", title: \"Evolve Plot\", description: \"Branch choices\", actionType: \"function\" }\n      ]\n    },\n    {\n      title: \"Narrative\",\n      subtitle: \"Outline frameworks, character webs, and scene beats.\",\n      placeholder: \"Pitch the premise…\",\n      examples: [\n        { id: \"nar-arc\", text: \"Design a three-act arc for a sci-fi thriller\", category: \"structure\", popularity: 1 },\n        { id: \"nar-chars\", text: \"Generate 3 intertwined character profiles\", category: \"characters\", popularity: 1 },\n        { id: \"nar-scene\", text: \"Write a short scene about resilience\", category: \"theme\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"nar-chars\", icon: \"Users\", title: \"Cast Characters\", description: \"Define roles & flaws\", actionType: \"submit\" },\n        { id: \"nar-beats\", icon: \"ListOrdered\", title: \"Beat Sheet\", description: \"Key beats per act\", actionType: \"submit\" }\n      ]\n    }\n  ],\n\n  task: [\n    {\n      title: \"Tasks\",\n      subtitle: \"Workflow orchestration: capture goals, automate steps, sprint helpers.\",\n      placeholder: \"Add a task or outcome…\",\n      examples: [\n        { id: \"tsk-weekly\", text: \"Template: Weekly outcome review\", category: \"templates\", popularity: 1 },\n        { id: \"tsk-decompose\", text: \"Decompose ‘Launch landing page’ into tasks\", category: \"delivery\", popularity: 1 },\n        { id: \"tsk-accept\", text: \"Acceptance criteria: ‘User login’ story\", category: \"qa\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"tsk-add\", icon: \"Plus\", title: \"Capture Task\", description: \"Quick add\", actionType: \"submit\" },\n        { id: \"tsk-sprint\", icon: \"Goal\", title: \"Sprint Helper\", description: \"Plan or review\", actionType: \"navigate\", actionData: { target: \"sprint\" } }\n      ]\n    },\n    {\n      title: \"Tasks\",\n      subtitle: \"From backlog to done—with templates and automations.\",\n      placeholder: \"What do you need to ship?\",\n      examples: [\n        { id: \"tsk-kanban\", text: \"Create a Kanban board structure\", category: \"templates\", popularity: 1 },\n        { id: \"tsk-crit\", text: \"Define acceptance criteria for ‘Payments’\", category: \"qa\", popularity: 1 },\n        { id: \"tsk-retro\", text: \"Run a 15-min retrospective\", category: \"process\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"tsk-brief\", icon: \"FileText\", title: \"Write Brief\", description: \"One-pager draft\", actionType: \"submit\" },\n        { id: \"tsk-automate\", icon: \"Bolt\", title: \"Quick Automations\", description: \"Trigger recipes\", actionType: \"navigate\", actionData: { target: \"recipes\" } }\n      ]\n    }\n  ],\n\n  career: [\n    {\n      title: \"Career\",\n      subtitle: \"Role research, materials, interview prep, and next steps.\",\n      placeholder: \"Role, target company, or challenge…\",\n      examples: [\n        { id: \"car-resume\", text: \"Rewrite resume bullets for impact (STAR)\", category: \"resume\", popularity: 1 },\n        { id: \"car-design\", text: \"System design interview warm-ups\", category: \"interview\", popularity: 1 },\n        { id: \"car-outreach\", text: \"Outreach note to a hiring manager\", category: \"networking\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"car-boost\", icon: \"FilePenLine\", title: \"Resume Boost\", description: \"Impact bullets\", actionType: \"submit\" },\n        { id: \"car-prep\", icon: \"ClipboardCheck\", title: \"Interview Prep\", description: \"Practice sets\", actionType: \"navigate\", actionData: { target: \"prep\" } }\n      ]\n    },\n    {\n      title: \"Career\",\n      subtitle: \"Discover roles, tailor materials, and practice with rubrics.\",\n      placeholder: \"Where do you want to go?\",\n      examples: [\n        { id: \"car-scout\", text: \"Scout back-end roles at mid-size SaaS\", category: \"scout\", popularity: 1 },\n        { id: \"car-portfolio\", text: \"Portfolio outline for a full-stack dev\", category: \"portfolio\", popularity: 1 },\n        { id: \"car-neg\", text: \"Negotiation prep checklist\", category: \"offers\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"car-scout\", icon: \"Binoculars\", title: \"Role Scout\", description: \"Targets & signals\", actionType: \"submit\" },\n        { id: \"car-cover\", icon: \"FileSignature\", title: \"Cover Letter\", description: \"Concise & personalized\", actionType: \"submit\" }\n      ]\n    }\n  ],\n\n  therapy: [\n    {\n      title: \"Therapy\",\n      subtitle: \"Reflective wellness: guided dialogues, CBT-style exercises, journaling.\",\n      placeholder: \"What’s weighing on you today?\",\n      examples: [\n        { id: \"th-5line\", text: \"5-line reflection on today’s emotions\", category: \"journaling\", popularity: 1 },\n        { id: \"th-cbt\", text: \"Identify & reframe a thinking trap\", category: \"cbt\", popularity: 1 },\n        { id: \"th-ground\", text: \"Grounding exercise for anxiety\", category: \"skills\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"th-start\", icon: \"Heart\", title: \"Start Session\", description: \"Gentle check-in\", actionType: \"submit\" },\n        { id: \"th-journal\", icon: \"NotebookPen\", title: \"5-Line Journal\", description: \"Fast reflection\", actionType: \"submit\" }\n      ]\n    },\n    {\n      title: \"Therapy\",\n      subtitle: \"Name it, notice it, and nudge it—one small step at a time.\",\n      placeholder: \"Share one thought you’re stuck on…\",\n      examples: [\n        { id: \"th-values\", text: \"Create a values list starter\", category: \"reflection\", popularity: 1 },\n        { id: \"th-cope\", text: \"Coping menu for tough moments\", category: \"skills\", popularity: 1 },\n        { id: \"th-reframe\", text: \"Reframe a self-critical thought\", category: \"cbt\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"th-breath\", icon: \"Wind\", title: \"Breathing Drill\", description: \"1-minute reset\", actionType: \"submit\" },\n        { id: \"th-track\", icon: \"Activity\", title: \"Mood Tracker\", description: \"Daily check-ins\", actionType: \"navigate\", actionData: { target: \"mood\" } }\n      ]\n    }\n  ],\n\n  medical: [\n    {\n      title: \"Medical\",\n      subtitle: \"Educational summaries and question lists for clinicians (not medical advice).\",\n      placeholder: \"Topic or text to summarize (no PII)…\",\n      examples: [\n        { id: \"md-cbc\", text: \"Explain CBC & CMP panels in plain language\", category: \"education\", popularity: 1 },\n        { id: \"md-note\", text: \"Summarize this anonymized clinical note\", category: \"summarization\", popularity: 1 },\n        { id: \"md-questions\", text: \"Question list for my upcoming appointment\", category: \"prep\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"md-sum\", icon: \"FileText\", title: \"Summarize\", description: \"Explain clearly\", actionType: \"submit\" },\n        { id: \"md-ask\", icon: \"HelpCircle\", title: \"Doctor Questions\", description: \"Prep checklist\", actionType: \"function\" }\n      ]\n    },\n    {\n      title: \"Medical\",\n      subtitle: \"Organize health info and prep smart questions.\",\n      placeholder: \"Share an educational topic…\",\n      examples: [\n        { id: \"md-meds\", text: \"Medication overview: purpose & side effects\", category: \"education\", popularity: 1 },\n        { id: \"md-labs\", text: \"Lab results: patterns & plain-language notes\", category: \"education\", popularity: 1 },\n        { id: \"md-visit\", text: \"Pre-visit checklist: symptoms & goals\", category: \"prep\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"md-plan\", icon: \"ListTodo\", title: \"Care Plan Notes\", description: \"Track next steps\", actionType: \"submit\" },\n        { id: \"md-journal\", icon: \"Notebook\", title: \"Symptom Journal\", description: \"Daily entries\", actionType: \"navigate\", actionData: { target: \"journal\" } }\n      ]\n    }\n  ],\n\n  eye: [\n    {\n      title: \"Inspector\",\n      subtitle: \"Analyze, validate, and extract patterns; optional vision/indexing.\",\n      placeholder: \"Paste text, logs, or data…\",\n      examples: [\n        { id: \"eye-json\", text: \"Validate and repair this JSON blob\", category: \"devtools\", popularity: 1 },\n        { id: \"eye-csp\", text: \"Diagnose a CSP error log\", category: \"security\", popularity: 1 },\n        { id: \"eye-ner\", text: \"Extract entities and keywords from text\", category: \"nlp\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"eye-analyze\", icon: \"ScanSearch\", title: \"Analyze\", description: \"Validate & extract\", actionType: \"submit\" },\n        { id: \"eye-train\", icon: \"BrainCircuit\", title: \"Index/Train\", description: \"Optional indexing\", actionType: \"function\" }\n      ]\n    },\n    {\n      title: \"Inspector\",\n      subtitle: \"Spot errors, structure data, and surface signals.\",\n      placeholder: \"Drop logs or text…\",\n      examples: [\n        { id: \"eye-csv\", text: \"Parse CSV and summarize anomalies\", category: \"data\", popularity: 1 },\n        { id: \"eye-schema\", text: \"Infer a JSON schema from examples\", category: \"devtools\", popularity: 1 },\n        { id: \"eye-pii\", text: \"Redact PII from this text\", category: \"security\", popularity: 1 }\n      ],\n      quickActions: [\n        { id: \"eye-validate\", icon: \"CheckCircle2\", title: \"Validate\", description: \"Sanity checks\", actionType: \"submit\" },\n        { id: \"eye-extract\", icon: \"Table2\", title: \"Extract Table\", description: \"Structured output\", actionType: \"submit\" }\n      ]\n    }\n  ]\n};\n\n\n// ----- pick a pack with improved precedence -----\n// 1) explicit idx\n// 2) rotate counter (persistent)\n// 3) random\n// 4) deterministic by hash of (musaiType + salt)\nconst packs = LIB[musaiType] || LIB.chat;\nconst len = packs.length;\n\nlet idx;\nif (Number.isInteger(forcedIdx) && forcedIdx >= 0 && forcedIdx < len) {\n  idx = forcedIdx;\n} else if (useRotate) {\n  idx = global.__musaiRotCounters[musaiType] % len;\n  global.__musaiRotCounters[musaiType] += 1;\n} else if (useRandom) {\n  idx = Math.floor(Math.random() * len);\n} else {\n  idx = djb2(`${musaiType}::${salt}`) % len;\n}\n\nconst pack = packs[Math.max(0, Math.min(idx, len - 1))];\n\n// ----- build contract result -----\nconst result = {\n  type: musaiType,\n  title: pack.title || \"Musai\",\n  subtitle: pack.subtitle || \"\",\n  placeholder: pack.placeholder || \"Type here…\",\n  examples: Array.isArray(pack.examples) ? pack.examples.slice(0, 6) : [],\n  quickActions: Array.isArray(pack.quickActions) ? pack.quickActions.slice(0, 4) : []\n};\n\n// minimums (defensive)\nif (result.examples.length < 3) {\n  while (result.examples.length < 3)\n    result.examples.push({ id: `ex-${result.examples.length+1}`, text: \"Example\", category: \"general\", popularity: 1 });\n}\nif (result.quickActions.length < 2) {\n  while (result.quickActions.length < 2)\n    result.quickActions.push({ id: `qa-${result.quickActions.length+1}`, icon: \"Sparkles\", title: \"Quick Action\", description: \"Do thing\", actionType: \"function\" });\n}\n\nreturn { json: result };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        -160
      ],
      "id": "d7a495ff-7925-4c93-88ef-d32de00cb03f",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "CheckPoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "CheckPoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CheckPoint": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PrepForLLM": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d3c5c827-fb4a-4855-aa99-89fb1e668002",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c3b1e9547a17eff9a9182eaa8e9809764c7c0d79f0473fb55f9aea874ddf90c9"
  },
  "id": "qKKgkVapASvATdMI",
  "tags": [
    {
      "createdAt": "2025-08-15T15:44:14.646Z",
      "updatedAt": "2025-08-15T15:44:14.646Z",
      "id": "PC19MdgjapOHg5hW",
      "name": "musai"
    }
  ]
}